A bunch of monad, functor, and applicative functor experimentation is F#, mainly using the monad defined by probability distributions (using sampling functions). Lots of fun - I even get the Haskell "<*>" infix notation going (which I pronounce as "kirby"), F# is very nice in that regard. Also, F#'s syntax for monad comprehensions is definitely still the best I've seen - it's totally integrated into the language and provides so many hooks for crazy features like "yield". It's a shame Scala's syntax is so sparse and collection-oriented, it's nearly as bad as C#'s explicit SQL-ness. "do!" vs. "_ <-" is just so much more readable and elegant. It's such a shame F# doesn't support higher kinded types or implicits, or I might actually still dust it off every once in a while. Ah, off to code some Scala...