Here's a style guide I've been working on for Scala. It's for my own personal reference, but others may find it helpful. 

Scala has a very flexible syntax, which is both a blessing and a curse. The official Scala style guide is of very little use, as it merely pares down the 5 bajillion possible ways to style your Scala code to a mere 1 bajillion or so. It has the highest prose-to-code ratio of any style guide I've ever seen. Sure, the variable-naming section has plenty of samples, but when it comes to the actual hard stuff, like how one is supposed to write a lambda or a method call, it reads like a novel - it's very hard to figure out, as a new Scala user, what the code is supposed to _look_ like. 

Since flexible syntax and the ability to create "DSLs" (a.k.a. rolling around naked in a big pile of punctuation, snorting crushed up punctuation, and other such decadent abuse of the second-to-topmost row of the keyboard) is one of the selling points of Scala, I understand the wish for the official style guide to avoid being overly restrictive. However, for people like me who are kinda OCD about how their code looks, having so many options can be a real cognitive drain. 

So, this is my attempt to make the most straightforward possible code style guide for Scala, with a minimum of special cases while still taking advantage of a teensy bit of the niceness of Scala's syntax - this is meant to be one small step above Java/C# syntax. You may have noticed that I am saying kind of dickish things and being pretty hostile to some of the syntactic possibilities of Scala, but please don't take it the wrong way. I think the way Scala has basically unified operators, method calls, controls structurees, lambdas, and pattern matching is a symphony of language design. I just find all those choices distracting to my particular brand of ADD while I'm writing Scala code. So, don't take what I say too seriously.